global:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  imagePullSecrets:
    - name: regcred

nameOverride: diabetes

elasticsearch:
  enabled: false
  clusterName: "diabetes-elasticsearch"
  replicas: 1
  minimumMasterNodes: 1
  httpPort: 9200
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  service:
    type: NodePort
    nodePort: 30300
  readinessProbe:
    failureThreshold: 6
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 3
    timeoutSeconds: 5
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 8Gi
kibana:
  enabled: false
  elasticsearchHosts: "http://diabetes-elasticsearch-master:9200"
  service:
    type: NodePort
    port: 5601
    nodePort: 30301
  ingress:
    enabled: fasle
    path: /
    annotations:
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/force-ssl-redirect: 'false'
      ingress.kubernetes.io/ssl-redirect: 'false'
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'false'
      nginx.ingress.kubernetes.io/ssl-redirect: 'false'
      nginx.ingress.kubernetes.io/proxy-body-size: 250m
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
    hosts:
      - diabetes-kibana
diabetes:
  replicaCount: 1
  image:
    repository: buketbm/diabetes
    tag: "latest"
    pullPolicy: Always
    internalPort: 80
  service:
    type: NodePort
    port: 80
    nodePort: 30304
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
    tls:
      - secretName: secrtname
  resources:
    requests:
      cpu: 100m
      memory: 263Mi
    limits:
      cpu: 442m
      memory: 310Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80